/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package aplikasi.penjualan.desktop.InternalFrame;

import aplikasi.penjualan.desktop.util.NavigatorForm;
import com.sunday.june.aplikasi.penjualan.controller.BarangController;
import com.sunday.june.aplikasi.penjualan.controller.FakturController;
import com.sunday.june.aplikasi.penjualan.controller.PelangganController;
import com.sunday.june.aplikasi.penjualan.orm.Barang;
import com.sunday.june.aplikasi.penjualan.orm.Faktur;
import com.sunday.june.aplikasi.penjualan.orm.Fakturdetail;
import com.sunday.june.aplikasi.penjualan.orm.Pelanggan;
import java.awt.event.KeyEvent;
import java.io.File;
import java.sql.Connection;
import java.text.DateFormat;
import java.text.DecimalFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Date;
import java.util.HashMap;
import javax.persistence.EntityManager;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Null Pointer
 */
public class FrmPenjualan extends javax.swing.JInternalFrame implements NavigatorForm {

    private DefaultTableModel tblModel;
    /**
     * Creates new form FrmPenjualan
     */
    public FrmPenjualan() {
        initComponents();
        jfTanggal.setText(dfddmmmyyyy.format(new Date()));
        jtxtNomorFaktur.setText(fCtrl.createNomorFAktur());
        tblModel = new DefaultTableModel(){
            Class[] types = new Class[]{
              java.lang.Integer.class,
                java.lang.String.class,
                java.lang.String.class,
                java.lang.Double.class,
                java.lang.Integer.class,
                java.lang.Double.class
            };
            boolean[] canEdit = new boolean[]{
                    false,false,false,false,true,false
                    };
        @Override
        public Class getColumnClass(int columnIndex){
            return types[columnIndex];
        }
            @Override
        public boolean isCellEditable(int rowIndex, int columnIndex) {
        return canEdit [columnIndex];
    }
        };
        tblModel.addColumn("NO");
        tblModel.addColumn("Kode Barang");
        tblModel.addColumn("Nama Barang");
        tblModel.addColumn("Harga Satuan");
        tblModel.addColumn("Qty");
        tblModel.addColumn("Total");
        jTable2.setModel(tblModel);
        clearTable();
        jtxtKodePelanggan.requestFocus();
    }
        DateFormat dfddmmmyyyy = new SimpleDateFormat("dd/MM/yyyy");
        DecimalFormat dftitik = new DecimalFormat("RP #,###");
        Faktur f = new Faktur();
        FakturController fCtrl = new FakturController(aplikasi.penjualan.desktop.AplikasiPenjualanDesktop.emf);
        Pelanggan pelanggan = new Pelanggan();
        PelangganController plgCtrl = new PelangganController(aplikasi.penjualan.desktop.AplikasiPenjualanDesktop.emf);
        BarangController brgCtrl = new BarangController((aplikasi.penjualan.desktop.AplikasiPenjualanDesktop.emf));
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jlblNomorFaktur = new javax.swing.JLabel();
        jlblKodePelanggan = new javax.swing.JLabel();
        jlblTanggal = new javax.swing.JLabel();
        jtxtNomorFaktur = new javax.swing.JTextField();
        jtxtKodePelanggan = new javax.swing.JTextField();
        jfTanggal = new javax.swing.JFormattedTextField();
        jtxtNamaPelanggan = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jtxtGrandTotal = new javax.swing.JTextField();
        jtxtKodeBarang = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();

        setClosable(true);
        setMaximizable(true);
        setTitle("Form Penjualan");

        jlblNomorFaktur.setText("Nomor Faktur");

        jlblKodePelanggan.setText("Kode Pelanggan");

        jlblTanggal.setText("Tanggal");

        jtxtNomorFaktur.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtxtNomorFakturKeyPressed(evt);
            }
        });

        jtxtKodePelanggan.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtxtKodePelangganKeyPressed(evt);
            }
        });

        jfTanggal.setEditable(false);
        jfTanggal.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("dd/MM/yyyy"))));
        jfTanggal.setToolTipText("");

        jtxtNamaPelanggan.setEditable(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Grand Total");

        jtxtGrandTotal.setEditable(false);
        jtxtGrandTotal.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jtxtGrandTotal.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jtxtGrandTotal.setFocusable(false);

        jtxtKodeBarang.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtxtKodeBarangKeyPressed(evt);
            }
        });

        jLabel2.setText("Kode Barang");

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable2.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jTable2PropertyChange(evt);
            }
        });
        jScrollPane2.setViewportView(jTable2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jlblNomorFaktur)
                                    .addComponent(jlblKodePelanggan))
                                .addGap(34, 34, 34)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jtxtKodeBarang, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jtxtNomorFaktur, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jtxtKodePelanggan, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jlblTanggal)
                                                .addGap(18, 18, 18)
                                                .addComponent(jfTanggal, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(jtxtNamaPelanggan, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addComponent(jLabel2))
                        .addGap(0, 34, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel1)
                                .addGap(28, 28, 28)
                                .addComponent(jtxtGrandTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlblNomorFaktur)
                    .addComponent(jlblTanggal)
                    .addComponent(jtxtNomorFaktur, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jfTanggal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlblKodePelanggan)
                    .addComponent(jtxtKodePelanggan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtxtNamaPelanggan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtxtKodeBarang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtxtGrandTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(169, 169, 169))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtxtKodePelangganKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtKodePelangganKeyPressed

        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            pelanggan = plgCtrl.cari(jtxtKodePelanggan.getText());
            if(pelanggan==null){
                JOptionPane.showMessageDialog(null, "Kode Pelanggan "+ jtxtKodePelanggan.getText()+" Tidak Ditemukan ");
                jtxtKodePelanggan.setText("");
                jtxtKodePelanggan.requestFocus();
            }else{
                jtxtKodePelanggan.setText(pelanggan.getKodepelanggan());
                jtxtNamaPelanggan.setText(pelanggan.getNamapelanggan().toUpperCase());
                jtxtKodeBarang.requestFocus();
            }
        }
        

// TODO add your handling code here:
    }//GEN-LAST:event_jtxtKodePelangganKeyPressed

    private void jtxtNomorFakturKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtNomorFakturKeyPressed
if( evt.getKeyCode() == KeyEvent.VK_ENTER){
    cariData();
}
        

// TODO add your handling code here:
    }//GEN-LAST:event_jtxtNomorFakturKeyPressed

    private void jtxtKodeBarangKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtKodeBarangKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
                try {
                Barang barang = new Barang();
                barang = brgCtrl.cari(jtxtKodeBarang.getText()); 
                if(barang != null){
                    tambahDataTable(barang, 1);
                    jtxtKodeBarang.setText("");
                    jtxtKodeBarang.requestFocus();
                }
            } catch (Exception e) {
            }       
        }
 
    }//GEN-LAST:event_jtxtKodeBarangKeyPressed

    private void jTable2PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jTable2PropertyChange

        if(tblModel.getRowCount()!=-1){
            int row = jTable2.getSelectedRow();
        Barang barang= new Barang();
        if(row != -1){
         barang = brgCtrl.cari((String)tblModel.getValueAt(row, 1));
        if(barang!=null){
            int qty = (int) tblModel.getValueAt(row, 4);
            Double total = qty* barang.getHargaStandar();
            tblModel.setValueAt(total, row, 5);
            hitungTotal();
        }           
        }

        }
      
    }//GEN-LAST:event_jTable2PropertyChange


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable2;
    private javax.swing.JFormattedTextField jfTanggal;
    private javax.swing.JLabel jlblKodePelanggan;
    private javax.swing.JLabel jlblNomorFaktur;
    private javax.swing.JLabel jlblTanggal;
    private javax.swing.JTextField jtxtGrandTotal;
    private javax.swing.JTextField jtxtKodeBarang;
    private javax.swing.JTextField jtxtKodePelanggan;
    private javax.swing.JTextField jtxtNamaPelanggan;
    private javax.swing.JTextField jtxtNomorFaktur;
    // End of variables declaration//GEN-END:variables

    @Override
    public void clearData() {
        jfTanggal.setText(dfddmmmyyyy.format(new Date()));
        jtxtKodePelanggan.setText("");
        jtxtNamaPelanggan.setText("");
        jtxtGrandTotal.setText("");
        clearTable();
    }

    @Override
    public void newData() {
    jtxtNomorFaktur.setText(fCtrl.createNomorFAktur());
    clearData();
    jtxtKodePelanggan.requestFocus();
    }

    @Override
    public void saveData() {
        Faktur ffind = fCtrl.cari(jtxtNomorFaktur.getText());
        if(ffind==null){
            f= new Faktur();
            f.setNomorfaktur(fCtrl.createNomorFAktur());
        }else{
            f = ffind;
        }
        setData();
        Collection<Fakturdetail> colFkdtl = new ArrayList<Fakturdetail>();
        for(int i = 0; i< tblModel.getRowCount(); i++){
            if(tblModel.getValueAt(i, 1)!= null){
                Fakturdetail fd = new Fakturdetail();
                fd.setNomorfaktur(f);
                if(tblModel.getValueAt(i, 0)!=null){
                    fd.setId(Integer.parseInt(tblModel.getValueAt(i, 0)+""));
                }
                setDataDetail(fd, i);
                colFkdtl.add(fd);
            }
        }
        f.setFakturdetailCollection(colFkdtl);
        if(ffind==null){
            try {
                fCtrl.simpan(f);
                jtxtNomorFaktur.setText(f.getNomorfaktur());
                JOptionPane.showMessageDialog(null, "Faktur Berhasil disimpan");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Gagal Menympan Faktur : "+ e.getMessage());
            }
        }else{
            try {
                fCtrl.edit(f);
                JOptionPane.showMessageDialog(null, "Faktur Berhasil Disimpan");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Gagal Menyimpan Faktur "+ e.getMessage());
            }
        }
        cariData();
    }

    @Override
    public void setData() {
    pelanggan = plgCtrl.cari(jtxtKodePelanggan.getText());
    if(pelanggan == null){
        jtxtKodePelanggan.setText("");
        jtxtNamaPelanggan.setText("");
    }
    f.setKodepelanggan(pelanggan);
        try {
            f.setTanggalfaktur(dfddmmmyyyy.parse(jfTanggal.getText()));
        } catch (ParseException e) {
        }
    
    }

    @Override
    public void deleteData() {
        try {
            fCtrl.hapus(jtxtNomorFaktur.getText());
            JOptionPane.showMessageDialog(null, "Faktur Berhasil Hasil Di hapus");
            
        } catch (Exception e) {
        }
    clearData();
    }

    @Override
    public void cariData() {
    f = fCtrl.cari(jtxtNomorFaktur.getText());
    showData();
    }

    @Override
    public void showData() {
    clearTable();
    if(f==null){
        newData();
    }else{
        jtxtNomorFaktur.setText(f.getNomorfaktur());
        jfTanggal.setText(dfddmmmyyyy.format(f.getTanggalfaktur()));
        if(f.getKodepelanggan() != null){
            jtxtKodePelanggan.setText(f.getKodepelanggan().getKodepelanggan());
            jtxtNamaPelanggan.setText(f.getKodepelanggan().getNamapelanggan());
            
        }
        Double totalHarga= new Double("0");
        for(Fakturdetail fd : f.getFakturdetailCollection()){
            tblModel.addRow(new Object[]{
                fd.getId(),
                fd.getKodebarang().getKodebarang(),
                fd.getKodebarang().getNamabarang(),
                fd.getHarga(),
                fd.getQty(),
                fd.getHarga()*fd.getQty()
            });

        }
        jtxtGrandTotal.setText(Double.toString(totalHarga));
        hitungTotal();
    }
    }

    @Override
    public void printData() {
        EntityManager em = null;
        try {
            em = aplikasi.penjualan.desktop.AplikasiPenjualanDesktop.emf.createEntityManager();
            em.getTransaction().begin();
            Connection con = em.unwrap(Connection.class);
            
            File file = new File("");
            String sourceFile = file.getAbsolutePath()+"//report//Penjualan.jasper";
            HashMap param = new HashMap();
            param.put("nomorkwitansi", jtxtNomorFaktur.getText());
            JasperPrint jPrint = JasperFillManager.fillReport(sourceFile, param, con);
            JasperViewer jView = new JasperViewer(jPrint, false);
            jView.setFitWidthZoomRatio();
            jView.setVisible(true);
            em.getTransaction().commit();
            
            con.close();
            
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Faktur Tidak Bisa Print"+e.getMessage());
        }finally{
            if(em != null){
                em.close();
            }
        }       
        
        
    }
    public void clearTable(){
        int row = tblModel.getRowCount();
        while(row>0){
            row--;
            tblModel.removeRow(row);
        }
    }
    
    public void setDataDetail(Fakturdetail fd, int i){
        Barang barang = brgCtrl.cari(tblModel.getValueAt(i, 1)+"");
        fd.setKodebarang(barang);
        double harga = 0;
        try {
            harga = Double.parseDouble(tblModel.getValueAt(i, 3)+"");
            
        } catch (Exception e) {
        }
        fd.setHarga(harga);
        int qty = 0;
        try {
            qty = Integer.parseInt(tblModel.getValueAt(i, 4)+"");
        } catch (Exception e) {
        }
        fd.setQty(qty);
    }
public void tambahDataTable(Barang barang,int qty){
    boolean sama= false;
    if(tblModel.getRowCount()>0){
        for(int i=0;i<tblModel.getRowCount();i++){
            String kode = (String) tblModel.getValueAt(i, 1);
            String kodeBarang = barang.getKodebarang();
            if(kode.equals((String)kodeBarang)|| kode== kodeBarang && kode!=null ){  
                int qt =(int) tblModel.getValueAt(i, 4);
                tblModel.setValueAt(qty+qt, i, 4);
            Double total = (qty+qt)* barang.getHargaStandar();
            tblModel.setValueAt(total, i, 5);
                jTable2.validate();
                sama = true;
            }

        }
                    if(!sama){
                                    tblModel.addRow(new Object[]{
                      null,
                       barang.getKodebarang(),
                       barang.getNamabarang(),
                       barang.getHargaStandar(),
                       qty,
                       barang.getHargaStandar()*qty
                    }); 
            }
    }else{
                            tblModel.addRow(new Object[]{
                      null,
                       barang.getKodebarang(),
                       barang.getNamabarang(),
                       barang.getHargaStandar(),
                       qty,
                       barang.getHargaStandar()*qty
                    });   
    }
 hitungTotal();
}
public void hitungTotal(){
    int row = tblModel.getRowCount();
    Double total = new Double("0");
    while(row>0){
        row--;
        Double harga =(Double) tblModel.getValueAt(row, 5);
        total += harga;
    }
    jtxtGrandTotal.setText(dftitik.format(total));
}
}
