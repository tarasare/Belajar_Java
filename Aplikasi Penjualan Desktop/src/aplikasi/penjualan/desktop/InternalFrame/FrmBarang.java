/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package aplikasi.penjualan.desktop.InternalFrame;

import aplikasi.penjualan.desktop.util.NavigatorForm;
import com.sunday.june.aplikasi.penjualan.controller.BarangController;
import com.sunday.june.aplikasi.penjualan.orm.Barang;
import java.awt.event.KeyEvent;
import java.io.File;
import java.sql.Connection;
import java.util.HashMap;
import javax.persistence.EntityManager;
import javax.swing.JOptionPane;
import net.sf.jasperreports.engine.JREmptyDataSource;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.JasperRunManager;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Null Pointer
 */
public class FrmBarang extends javax.swing.JInternalFrame implements NavigatorForm {

    /**
     * Creates new form FrmBarang
     */
    public FrmBarang() {
        initComponents();
    }
BarangController brgCtrl = new BarangController(aplikasi.penjualan.desktop.AplikasiPenjualanDesktop.emf);
    Barang barang;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jtxtKodeBarang = new javax.swing.JTextField();
        jtxtNamaBarang = new javax.swing.JTextField();
        jtxtStock = new javax.swing.JTextField();
        jtxtHargaStandar = new javax.swing.JTextField();

        setClosable(true);
        setTitle("Form Barang");

        jLabel1.setText("Kode Barang");

        jLabel2.setText("Nama Barang");

        jLabel3.setText("Stock");

        jLabel4.setText("Harga Standar");

        jtxtKodeBarang.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtxtKodeBarangKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtxtKodeBarangKeyTyped(evt);
            }
        });

        jtxtNamaBarang.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtxtNamaBarangKeyTyped(evt);
            }
        });

        jtxtStock.setText("0");

        jtxtHargaStandar.setText("0");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jtxtKodeBarang)
                    .addComponent(jtxtNamaBarang)
                    .addComponent(jtxtStock)
                    .addComponent(jtxtHargaStandar, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE))
                .addContainerGap(190, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jtxtKodeBarang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jtxtNamaBarang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jtxtStock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jtxtHargaStandar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(49, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtxtKodeBarangKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtKodeBarangKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            cariData();
        }
        
    }//GEN-LAST:event_jtxtKodeBarangKeyPressed

    private void jtxtKodeBarangKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtKodeBarangKeyTyped
        // TODO add your handling code here:
        if(jtxtKodeBarang.getText().length()==5){
            evt.consume();
        }
        
        
    }//GEN-LAST:event_jtxtKodeBarangKeyTyped

    private void jtxtNamaBarangKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtNamaBarangKeyTyped
        // TODO add your handling code here:
        
        if(jtxtNamaBarang.getText().length()==20){
            evt.consume();
        }
        
    }//GEN-LAST:event_jtxtNamaBarangKeyTyped


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField jtxtHargaStandar;
    private javax.swing.JTextField jtxtKodeBarang;
    private javax.swing.JTextField jtxtNamaBarang;
    private javax.swing.JTextField jtxtStock;
    // End of variables declaration//GEN-END:variables

    @Override
    public void clearData() {
    jtxtNamaBarang.setText("");
    jtxtStock.setText("0");
    jtxtHargaStandar.setText("0");
    jtxtKodeBarang.setText("");
    jtxtKodeBarang.requestFocus();
    
    }

    @Override
    public void newData() {
    jtxtKodeBarang.setText("");
    clearData();
    jtxtKodeBarang.requestFocus();
    
    }

    @Override
    public void saveData() {
        if(!jtxtKodeBarang.getText().trim().equals("")){
            barang = brgCtrl.cari(jtxtKodeBarang.getText().toUpperCase());
            if(barang == null){
                barang = new Barang();
                setData();
        try {
           brgCtrl.simpan(barang); 
           JOptionPane.showMessageDialog(null, "Barang Berhasil Disimpan");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Gagal Menyimpan ");
        }
            }else{
                try {
                    brgCtrl.edit(barang);
                    JOptionPane.showMessageDialog(null, "Barang Berhasil Di Update");
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "Error!!!");
                }
            }
        }


   
   
    
    }

    @Override
    public void setData() {
       barang.setKodebarang(jtxtKodeBarang.getText().toUpperCase());
   barang.setNamabarang(jtxtNamaBarang.getText().toUpperCase());
        try {
            barang.setHargaStandar(Double.parseDouble(jtxtHargaStandar.getText()));
        } catch (Exception e) {
        barang.setHargaStandar(0d);
        }
        try {
         barang.setStok(Integer.parseInt(jtxtStock.getText()));   
        } catch (Exception e) {
            barang.setStok(0);
        }
   
   
    
    
    }

    @Override
    public void deleteData() {
        try {
            brgCtrl.hapus(jtxtKodeBarang.getText().toUpperCase());
            JOptionPane.showMessageDialog(null, "Barang BErhasil Dihapus ");
            clearData();
        } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "Eror" + e.getMessage());
        }
    
    }

    @Override
    public void cariData() {
        try {
    barang = brgCtrl.cari(jtxtKodeBarang.getText().toUpperCase());
    if(barang!= null){
        showData();
    }
        } catch (Exception e) {
        }

    
    }

    @Override
    public void showData() {

        try {
    jtxtNamaBarang.setText(barang.getNamabarang());
    jtxtStock.setText(Integer.toString(barang.getStok()));
    jtxtHargaStandar.setText(Double.toString(barang.getHargaStandar())); 
        } catch (Exception e) {
        }
    
    }

    @Override
    public void printData() {
        EntityManager em = null;
        try {
            em = aplikasi.penjualan.desktop.AplikasiPenjualanDesktop.emf.createEntityManager();
            em.getTransaction().begin();
            Connection conn = em.unwrap(Connection.class);
            File file = new File("");
            String sourceFile = file.getAbsolutePath()+"\\report\\Barang.jasper";
            JasperPrint jPrint = JasperFillManager.fillReport(sourceFile,new HashMap(), conn);
            JasperViewer jView = new JasperViewer(jPrint, false);
            jView.setFitPageZoomRatio();
            jView.setVisible(true);
            em.getTransaction().commit();
            conn.close();
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this,"Tidak Bisa Diprint "+e.getMessage());
        }finally{
            if(em!=null){
                em.close();
            }
        }
    }
}
